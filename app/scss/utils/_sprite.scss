// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$datepicker-name: 'datepicker';
$datepicker-x: 1238px;
$datepicker-y: 552px;
$datepicker-offset-x: -1238px;
$datepicker-offset-y: -552px;
$datepicker-width: 20px;
$datepicker-height: 19px;
$datepicker-total-width: 1900px;
$datepicker-total-height: 821px;
$datepicker-image: '/css/sprite.png';
$datepicker: (1238px, 552px, -1238px, -552px, 20px, 19px, 1900px, 821px, '/css/sprite.png', 'datepicker', );
$desktop-footer-name: 'desktop-footer';
$desktop-footer-x: 0px;
$desktop-footer-y: 288px;
$desktop-footer-offset-x: 0px;
$desktop-footer-offset-y: -288px;
$desktop-footer-width: 1900px;
$desktop-footer-height: 264px;
$desktop-footer-total-width: 1900px;
$desktop-footer-total-height: 821px;
$desktop-footer-image: '/css/sprite.png';
$desktop-footer: (0px, 288px, 0px, -288px, 1900px, 264px, 1900px, 821px, '/css/sprite.png', 'desktop-footer', );
$desktop-header-name: 'desktop-header';
$desktop-header-x: 0px;
$desktop-header-y: 0px;
$desktop-header-offset-x: 0px;
$desktop-header-offset-y: 0px;
$desktop-header-width: 1900px;
$desktop-header-height: 288px;
$desktop-header-total-width: 1900px;
$desktop-header-total-height: 821px;
$desktop-header-image: '/css/sprite.png';
$desktop-header: (0px, 0px, 0px, 0px, 1900px, 288px, 1900px, 821px, '/css/sprite.png', 'desktop-header', );
$facebook-name: 'facebook';
$facebook-x: 1199px;
$facebook-y: 552px;
$facebook-offset-x: -1199px;
$facebook-offset-y: -552px;
$facebook-width: 39px;
$facebook-height: 37px;
$facebook-total-width: 1900px;
$facebook-total-height: 821px;
$facebook-image: '/css/sprite.png';
$facebook: (1199px, 552px, -1199px, -552px, 39px, 37px, 1900px, 821px, '/css/sprite.png', 'facebook', );
$golden-badge-name: 'golden-badge';
$golden-badge-x: 920px;
$golden-badge-y: 552px;
$golden-badge-offset-x: -920px;
$golden-badge-offset-y: -552px;
$golden-badge-width: 86px;
$golden-badge-height: 85px;
$golden-badge-total-width: 1900px;
$golden-badge-total-height: 821px;
$golden-badge-image: '/css/sprite.png';
$golden-badge: (920px, 552px, -920px, -552px, 86px, 85px, 1900px, 821px, '/css/sprite.png', 'golden-badge', );
$instagram-name: 'instagram';
$instagram-x: 1121px;
$instagram-y: 552px;
$instagram-offset-x: -1121px;
$instagram-offset-y: -552px;
$instagram-width: 39px;
$instagram-height: 37px;
$instagram-total-width: 1900px;
$instagram-total-height: 821px;
$instagram-image: '/css/sprite.png';
$instagram: (1121px, 552px, -1121px, -552px, 39px, 37px, 1900px, 821px, '/css/sprite.png', 'instagram', );
$logo-name: 'logo';
$logo-x: 1006px;
$logo-y: 552px;
$logo-offset-x: -1006px;
$logo-offset-y: -552px;
$logo-width: 115px;
$logo-height: 44px;
$logo-total-width: 1900px;
$logo-total-height: 821px;
$logo-image: '/css/sprite.png';
$logo: (1006px, 552px, -1006px, -552px, 115px, 44px, 1900px, 821px, '/css/sprite.png', 'logo', );
$mobile-footer-name: 'mobile-footer';
$mobile-footer-x: 600px;
$mobile-footer-y: 552px;
$mobile-footer-offset-x: -600px;
$mobile-footer-offset-y: -552px;
$mobile-footer-width: 320px;
$mobile-footer-height: 161px;
$mobile-footer-total-width: 1900px;
$mobile-footer-total-height: 821px;
$mobile-footer-image: '/css/sprite.png';
$mobile-footer: (600px, 552px, -600px, -552px, 320px, 161px, 1900px, 821px, '/css/sprite.png', 'mobile-footer', );
$mobile-header-name: 'mobile-header';
$mobile-header-x: 0px;
$mobile-header-y: 552px;
$mobile-header-offset-x: 0px;
$mobile-header-offset-y: -552px;
$mobile-header-width: 320px;
$mobile-header-height: 269px;
$mobile-header-total-width: 1900px;
$mobile-header-total-height: 821px;
$mobile-header-image: '/css/sprite.png';
$mobile-header: (0px, 552px, 0px, -552px, 320px, 269px, 1900px, 821px, '/css/sprite.png', 'mobile-header', );
$step-bg-name: 'step-bg';
$step-bg-x: 320px;
$step-bg-y: 552px;
$step-bg-offset-x: -320px;
$step-bg-offset-y: -552px;
$step-bg-width: 280px;
$step-bg-height: 254px;
$step-bg-total-width: 1900px;
$step-bg-total-height: 821px;
$step-bg-image: '/css/sprite.png';
$step-bg: (320px, 552px, -320px, -552px, 280px, 254px, 1900px, 821px, '/css/sprite.png', 'step-bg', );
$twitter-name: 'twitter';
$twitter-x: 1160px;
$twitter-y: 552px;
$twitter-offset-x: -1160px;
$twitter-offset-y: -552px;
$twitter-width: 39px;
$twitter-height: 37px;
$twitter-total-width: 1900px;
$twitter-total-height: 821px;
$twitter-image: '/css/sprite.png';
$twitter: (1160px, 552px, -1160px, -552px, 39px, 37px, 1900px, 821px, '/css/sprite.png', 'twitter', );
$spritesheet-width: 1900px;
$spritesheet-height: 821px;
$spritesheet-image: '/css/sprite.png';
$spritesheet-sprites: ($datepicker, $desktop-footer, $desktop-header, $facebook, $golden-badge, $instagram, $logo, $mobile-footer, $mobile-header, $step-bg, $twitter, );
$spritesheet: (1900px, 821px, '/css/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
